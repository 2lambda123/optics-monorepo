/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "sequence",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "ProcessError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "ProcessSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canConfirm",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "current",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nextToProcess",
        type: "uint32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_confirmAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextToProcess",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_item",
        type: "bytes32",
      },
    ],
    name: "queueContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueEnd",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCurrentRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Common.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516136863803806136868339818101604052602081101561003357600080fd5b505160e081901b6001600160e01b03191660805263ffffffff1661361d6100696000398061103752806110cd525061361d6000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80638d3638f411610145578063b31c01fb116100bd578063bf30a55d1161008c578063d88beda211610071578063d88beda214610906578063df034cd01461090e578063f6d161021461093f57610241565b8063bf30a55d146108a9578063c19d93fb146108fe57610241565b8063b31c01fb14610728578063b61c19e8146107da578063b80777ea14610880578063ba739a621461088857610241565b80639868a273116101145780639fa6a6e3116100f95780639fa6a6e3146106fb578063a3f81d6814610703578063ab91c7b01461072057610241565b80639868a2731461069e5780639d54f419146106c857610241565b80638d3638f414610542578063928bc4b21461054a578063961681dc146105f057806396ae1a89146105f857610241565b806339992668116101d857806351d7bcd7116101a75780636188af0e1161018c5780636188af0e1461046f5780637022b58e1461051d57806371bfb7b81461052557610241565b806351d7bcd71461042e57806354fd4d501461045157610241565b806339992668146103f557806345630b1a146103fd578063456d0672146104055780635146366e1461042657610241565b806325e3beda1161021457806325e3beda146103565780632bbd59ca146103705780632bef2892146103ae578063371d3071146103cb57610241565b8063016bcc3514610246578063146901db1461026557806314cfabb31461026d57806319d9d21a14610289575b600080fd5b6102636004803603602081101561025c57600080fd5b5035610947565b005b610263610960565b61027561096a565b604080519115158252519081900360200190f35b610263600480360360a081101561029f57600080fd5b81359160208101918101906080810160608201356401000000008111156102c557600080fd5b8201836020820111156102d757600080fd5b803590602001918460018302840111640100000000831117156102f957600080fd5b91939092909160208101903564010000000081111561031757600080fd5b82018360208201111561032957600080fd5b8035906020019184600183028401116401000000008311171561034b57600080fd5b509092509050610996565b61035e610bf3565b60408051918252519081900360200190f35b61038d6004803603602081101561038657600080fd5b5035610bf9565b6040518082600281111561039d57fe5b815260200191505060405180910390f35b610275600480360360208110156103c457600080fd5b5035610c0e565b61027560048036036104408110156103e257600080fd5b5080359060208101906104200135610c23565b61035e610d43565b61035e610d49565b61040d610d5e565b6040805163ffffffff9092168252519081900360200190f35b61035e610d6a565b6102636004803603602081101561044457600080fd5b503563ffffffff16610d74565b610459610dab565b6040805160ff9092168252519081900360200190f35b610263600480360361044081101561048657600080fd5b8101906020810181356401000000008111156104a157600080fd5b8201836020820111156104b357600080fd5b803590602001918460018302840111640100000000831117156104d557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610db0565b610263610e3c565b61035e6004803603602081101561053b57600080fd5b5035611023565b61040d611035565b6102756004803603602081101561056057600080fd5b81019060208101813564010000000081111561057b57600080fd5b82018360208201111561058d57600080fd5b803590602001918460018302840111640100000000831117156105af57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611059945050505050565b61040d611746565b6102756004803603602081101561060e57600080fd5b81019060208101813564010000000081111561062957600080fd5b82018360208201111561063b57600080fd5b8035906020019184600183028401116401000000008311171561065d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611752945050505050565b61035e60048036036104408110156106b557600080fd5b508035906020810190610420013561175d565b610263600480360360208110156106de57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661179b565b61035e6117e2565b6102756004803603602081101561071957600080fd5b50356117e8565b61035e61180f565b6102636004803603606081101561073e57600080fd5b81359160208101359181019060608101604082013564010000000081111561076557600080fd5b82018360208201111561077757600080fd5b8035906020019184600183028401116401000000008311171561079957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061181b945050505050565b610263600480360360208110156107f057600080fd5b81019060208101813564010000000081111561080b57600080fd5b82018360208201111561081d57600080fd5b8035906020019184600183028401116401000000008311171561083f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611aff945050505050565b61035e611b89565b610890611b8d565b6040805192835260208301919091528051918290030190f35b610263600480360360a08110156108bf57600080fd5b5063ffffffff813581169173ffffffffffffffffffffffffffffffffffffffff6020820135169160408201359160608101359160809091013516611bdb565b61038d611d88565b61035e611da9565b610916611db0565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61035e611dcc565b6035819055600090815260686020526040902060019055565b610968611dd8565b565b60006109766001611e19565b15801590610991575061099161098c6001611e51565b6117e8565b905090565b600260345474010000000000000000000000000000000000000000900460ff1660028111156109c157fe5b1415610a2e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f8601819004810282018101909252848152610a709188918835918890889081908401838280828437600092019190915250611ef292505050565b8015610abf5750610abf86866001602002013584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ef292505050565b8015610ad057508435602086013514155b15610beb57610add610960565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b613a9881565b606a6020526000908152604090205460ff1681565b6000610c1b600183611f84565b90505b919050565b6000806000858152606a602052604090205460ff166002811115610c4357fe5b14610caf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610ce58585602080602002604051908101604052809291908260208002808284376000920191909152508791506120009050565b9050610cf0816117e8565b15610d365750506000838152606a6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610d3c565b60009150505b9392505050565b60665481565b6065546000906109919063ffffffff166120ab565b60675463ffffffff1681565b6000610991610d49565b606580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b600081565b610dc283805190602001208383610c23565b610e2d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610e3683611059565b50505050565b600260345474010000000000000000000000000000000000000000900460ff166002811115610e6757fe5b1415610ed457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b610ede6001611e19565b610f4957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f2170656e64696e67000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080610f566001611e19565b90505b600081118015610f715750610f7161098c6001611e51565b15610fa957610f806001612120565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610f59565b8161101557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f2174696d65000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b61101d610968565b50603555565b60686020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806110668382612259565b905060006110957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661227d565b905060006110c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000084166122bc565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166111187fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000085166122ed565b63ffffffff161461118a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b60016000838152606a602052604090205460ff1660028111156111a957fe5b1461121557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f2170656e64696e67000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60695460ff1660011461128957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b606980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000838152606a60205260409020805490911660021790556067805463ffffffff60018401167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000909116179055620d32e85a101561137557604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006113a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851661231e565b9050606073ffffffffffffffffffffffffffffffffffffffff8216620cf8506113ec7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008816612331565b6114177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008916612361565b61146c6114457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008b16612392565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016612403565b604051602401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114be5781810151838201526020016114a6565b50505050905090810190601f1680156114eb5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f56d5d47500000000000000000000000000000000000000000000000000000000178152905182519297509550859450925090508083835b602083106115b357805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611576565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d8060008114611616576040519150601f19603f3d011682016040523d82523d6000602084013e61161b565b606091505b50909650905085156116575760405184907fdc8a2c27342659cbe87c6c49e4515c64faa8c97ba6a2f260cbf33d84d7bd832090600090a2611710565b8173ffffffffffffffffffffffffffffffffffffffff168363ffffffff16857fdffcee52db78cb2d1f525b8d7edd630ea062884e733aa26c201d7ce1843eccab846040518080602001828103825283818151815260200191508051906020019080838360005b838110156116d55781810151838201526020016116bd565b50505050905090810190601f1680156117025780820380516001836020036101000a031916815260200191505b509250505060405180910390a45b5050606980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550919392505050565b60655463ffffffff1681565b6000610c1b82611059565b60006117938484602080602002604051908101604052809291908260208002808284376000920191909152508691506120009050565b949350505050565b603480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60355481565b60008181526068602052604081205480611806576000915050610c1e565b42101592915050565b60006109916001611e19565b600260345474010000000000000000000000000000000000000000900460ff16600281111561184657fe5b14156118b357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b60006118bf6001611e19565b1115611941576118cf6001612447565b831461193c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420656e64206f6620717565756500000000000000000000000000000000604482015290519081900360640190fd5b6119b1565b82603554146119b157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b6119bc838383611ef2565b611a2757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6261642073696700000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b611a2f610968565b6066546000838152606860205260409020429091019055611a51600183612484565b5060655460408051602080825284518183015284518694889463ffffffff909116937f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b2938893919283929083019185019080838360005b83811015611ac0578181015183820152602001611aa8565b50505050905090810190601f168015611aed5780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b6000611b0b8282612259565b90506001606a6000611b3e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851661227d565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001836002811115611b8057fe5b02179055505050565b4290565b600080611b9a6001611e19565b15611bc257611ba96001611e51565b6000818152606860205260409020549092509050611bd7565b50506035546000818152606860205260409020545b9091565b600054610100900460ff1680611bf45750611bf46124f1565b80611c02575060005460ff16155b611c57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806134d6602e913960400191505060405180910390fd5b600054610100900460ff16158015611cbd57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b611cc685612502565b606980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556065805463ffffffff808a167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000928316179092556035879055600087815260686020526040902092909255606685905560678054918516919092161790558015610beb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055505050505050565b60345474010000000000000000000000000000000000000000900460ff1681565b620cf85081565b60345473ffffffffffffffffffffffffffffffffffffffff1681565b60006109916001612447565b603480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000179055565b80546000906fffffffffffffffffffffffffffffffff7001000000000000000000000000000000008204811691166117938282612698565b6000611e5c826126b2565b15611ec857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f456d707479000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5080546fffffffffffffffffffffffffffffffff1660009081526001909101602052604090205490565b600080611efd610d49565b8585604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050611f3e816126e1565b60345490915073ffffffffffffffffffffffffffffffffffffffff16611f648285612732565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b81546000906fffffffffffffffffffffffffffffffff165b835470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff168111611ff4576000818152600185016020526040902054831415611fec576001915050611ffa565b600101611f9c565b50600090505b92915050565b8260005b60208110156120a357600183821c16600085836020811061202157fe5b6020020151905081600114156120675780846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209350612099565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101612004565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4f5054494353000000000000000000000000000000000000000000000000000060248401528151808403600a018152602a909301909152815191012090565b80546000906fffffffffffffffffffffffffffffffff7001000000000000000000000000000000008204811691166121588282612698565b6121c357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f456d707479000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6fffffffffffffffffffffffffffffffff8116600090815260018501602052604090205492508215612214576fffffffffffffffffffffffffffffffff811660009081526001850160205260408120555b83547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166001919091016fffffffffffffffffffffffffffffffff1617909255919050565b81516000906020840161227464ffffffffff851682846127cc565b95945050505050565b60008061228983612822565b6bffffffffffffffffffffffff16905060006122a484612836565b6bffffffffffffffffffffffff169091209392505050565b6000610c1b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166024600461284a565b6000610c1b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166028600461284a565b6000610c1b61232c8361286b565b61289c565b6000610c1b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831682600461284a565b6000610c1b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166004602061289f565b6000610c1b604c806123c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008616612836565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612a4a565b606060008061241184612836565b6bffffffffffffffffffffffff16905060405191508192506124368483602001612ad0565b508181016020016040529052919050565b805470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1660009081526001909101602052604090205490565b81546fffffffffffffffffffffffffffffffff8082167001000000000000000000000000000000009283900482166001019182169092029190911783558115611ffa576fffffffffffffffffffffffffffffffff8116600090815260019390930160205260409092205590565b60006124fc30612bfc565b15905090565b600054610100900460ff168061251b575061251b6124f1565b80612529575060005460ff16155b61257e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806134d6602e913960400191505060405180910390fd5b600054610100900460ff161580156125e457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6125ec612c02565b603480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055801561269457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b60019103016fffffffffffffffffffffffffffffffff1690565b546fffffffffffffffffffffffffffffffff808216700100000000000000000000000000000000909204161090565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600081516041146127a457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a6127c286828585612d20565b9695505050505050565b6000806127d98484612f0e565b90506040518111156127e9575060005b80612817577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610d3c565b612274858585612f80565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b60008160200360080260ff1661286185858561289f565b901c949350505050565b6000610c1b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c602061289f565b90565b600060ff82166128b157506000610d3c565b6128ba84612836565b6bffffffffffffffffffffffff166128d58460ff8516612f0e565b11156129b4576129166128e785612822565b6bffffffffffffffffffffffff166128fe86612836565b6bffffffffffffffffffffffff16858560ff16612f93565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612979578181015183820152602001612961565b50505050905090810190601f1680156129a65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff161115612a11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180613526603a913960400191505060405180910390fd5b600882026000612a2086612822565b6bffffffffffffffffffffffff1690506000612a3b836130ee565b91909501511695945050505050565b600080612a5686612822565b6bffffffffffffffffffffffff169050612a6f86613137565b612a8385612a7d8489612f0e565b90612f0e565b1115612ab2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050611793565b612abc8186612f0e565b90506127c28364ffffffffff1682866127cc565b6000612adb83613161565b612b30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806135606028913960400191505060405180910390fd5b612b3983613173565b612b8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180613588602b913960400191505060405180910390fd5b6000612b9984612836565b6bffffffffffffffffffffffff1690506000612bb485612822565b6bffffffffffffffffffffffff1690506000604051905084811115612bd95760206060fd5b8285848460045afa506127c2612bee876131b0565b64ffffffffff168685612f80565b3b151590565b600054610100900460ff1680612c1b5750612c1b6124f1565b80612c29575060005460ff16155b612c7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806134d6602e913960400191505060405180910390fd5b600054610100900460ff16158015612ce457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b612cee60016131b6565b8015612d1d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612d9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134936022913960400191505060405180910390fd5b8360ff16601b1480612db057508360ff16601c145b612e05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135046022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612e61573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661227457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b81810182811015611ffa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b60606000612fa0866131fa565b9150506000612fae866131fa565b9150506000612fbc866131fa565b9150506000612fca866131fa565b9150508383838360405160200180806135b3603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a82015260500160216134b582397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600061314282612836565b61314b83612822565b016bffffffffffffffffffffffff169050919050565b600061316c826132ce565b1592915050565b600061317e826131b0565b64ffffffffff1664ffffffffff141561319957506000610c1e565b60006131a483613137565b60405110199392505050565b60d81c90565b80546fffffffffffffffffffffffffffffffff16612d1d5780547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016600117815550565b600080601f5b600f8160ff1611156132625760ff600882021684901c61321f816132f6565b61ffff16841793508160ff1660101461323a57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01613200565b50600f5b60ff8160ff1610156132c85760ff600882021684901c613285816132f6565b61ffff16831792508160ff166000146132a057601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01613266565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b600061330860048360ff16901c613326565b60ff161760081b62ffff001661331d82613326565b60ff1617919050565b600060f08083179060ff82161415613342576030915050610c1e565b8060ff1660f11415613358576031915050610c1e565b8060ff1660f2141561336e576032915050610c1e565b8060ff1660f31415613384576033915050610c1e565b8060ff1660f4141561339a576034915050610c1e565b8060ff1660f514156133b0576035915050610c1e565b8060ff1660f614156133c6576036915050610c1e565b8060ff1660f714156133dc576037915050610c1e565b8060ff1660f814156133f2576038915050610c1e565b8060ff1660f91415613408576039915050610c1e565b8060ff1660fa141561341e576061915050610c1e565b8060ff1660fb1415613434576062915050610c1e565b8060ff1660fc141561344a576063915050610c1e565b8060ff1660fd1415613460576064915050610c1e565b8060ff1660fe1415613476576065915050610c1e565b8060ff1660ff141561348c576066915050610c1e565b5091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a2646970667358221220a0f142b11bf2a823433b5e55c9d1cfcdcd7afc04c34b718374c8497d66e6199964736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(_localDomain, overrides || {}) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_localDomain, overrides || {});
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
